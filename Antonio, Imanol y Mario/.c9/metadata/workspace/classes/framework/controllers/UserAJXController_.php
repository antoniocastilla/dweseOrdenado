{"filter":false,"title":"UserAJXController<.php","tooltip":"/classes/framework/controllers/UserAJXController<.php","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":18,"column":0},"end":{"row":136,"column":4},"action":"remove","lines":["    /*","    proceso general:","    1º control de sesión","    2º lectura de datos","    3º validación de datos","    4º usar el modelo","    5º producir resultado (para la vista)","    */","","    function ciudades() {","","    }","","    function dologin() {","        //1º control de sesión","        if($this->getSession()->isLogged()) {","            //5º producir resultado -> redirección","            header('Location: ' . App::BASE . 'index?op=login&r=session');","            exit();","        }","","        //2º lectura de datos","        $usuario = Reader::readObject('izv\\data\\Usuario');","        ","        //4º usar el modelo","        $r = $this->getModel()->login($usuario);","","        if($r !== false) {","            $this->getSession()->login($r);","            $r = 1;","        } else {","            $r = 0;","        }","        ","        //5º producir resultado -> redirección","        header('Location: ' . App::BASE . 'index?op=login&r=' . $r);","        exit();","    }","","    function dologout() {","        $this->getSession()->logout();","        header('Location: ' . App::BASE . 'index');","        exit();","    }","","    function doregister() {","        //1º control de sesión","        if($this->getSession()->isLogged()) {","            //5º producir resultado -> redirección","            header('Location: ' . App::BASE . 'index?op=register&r=session');","            exit();","        }","","        //2º lectura de datos","        $usuario = Reader::readObject('izv\\data\\Usuario');","        $clave2 = Reader::read('clave2');","","        //3º validación de datos","        if($usuario->getClave() !== $clave2 ||","            mb_strlen($usuario->getClave()) < 4) {","            //5º producir resultado -> redirección","            header('Location: ' . App::BASE . 'index?op=register&r=password');","            exit();","        }","        if (!filter_var($usuario->getCorreo(), FILTER_VALIDATE_EMAIL)) {","            //5º producir resultado -> redirección","            header('Location: ' . App::BASE . 'index?op=register&r=email');","            exit();","        }","","        //4º usar el modelo","        $usuario->setClave(Util::encriptar($usuario->getClave()));","        $r = $this->getModel()->register($usuario);","","        //5º producir resultado -> redirección","        header('Location: ' . App::BASE . 'index?op=register&r=' . $r);","        exit();","    }","","    function login() {","        //1º control de sesión, si está logueado no se muestra el login","        if(!$this->getSession()->isLogged()) {","            //2º lectura de datos    -> no hay","            //3º validación de datos -> no hay","            //4º usar el modelo    -> no hace falta","            //5º producir resultado","            $this->getModel()->set('twigFile', 'page-login.html');","        }","    }","","    function defaultAction() {","        //1º control de sesión","        if($this->getSession()->isLogged()) {","            $this->getModel()->set('twigFile', 'page-user.html');","            $this->getModel()->set('user', $this->getSession()->getLogin()->getCorreo());","            if($this->isAdministrator()) {","                $this->getModel()->set('administrador', true);","            }","        } else {","            //5º producir resultado","            $this->login();","            ","        }","    }","","    function otra() {","        $this->getModel()->set('twigFile', '_otra.html');","    }","","    function register() {","        //1º control de sesión, si está logueado no se muestra el registro","        if(!$this->getSession()->isLogged()) {","            //5º producir resultado","            $this->getModel()->set('twigFile', '_register.html');","        }","    }","    ","    ","    "],"id":2},{"start":{"row":18,"column":0},"end":{"row":103,"column":5},"action":"insert","lines":["    function comprobaralias() {","        $alias = Reader::read('alias');","        $available = 0;","        if($alias !== null && $alias !== '') {","            $available = $this->getModel()->aliasAvailable($alias);","        }","        $this->getModel()->set('aliasdisponible', $available);","    }","    ","    function comprobarcorreo() {","        $correo = Reader::read('correo');","        $available = 0;","        if(filter_var($correo, FILTER_VALIDATE_EMAIL)) {","            $available = $this->getModel()->correoAvailable($correo);","        }","        $this->getModel()->set('correodisponible', $available);","    }","    ","    function dologin(){","        $correo = Reader::read('correo');","        $clave = Reader::read('clave');","        $resultado = $this->getModel()->login($correo, $clave);","        if($resultado !== false) {","            $this->getSession()->login($resultado);","            $resultado=true;","            $this->getModel()->set('link', App::BASE);","        }","        $this->getModel()->set('login', $resultado);","    }","","    function dologout(){","        $this->getSession()->logout();","        $this->getModel()->set('logout', true);","        $this->getModel()->set('link', App::BASE . 'login');","    }","","    function listaciudades() {","        $ordenes = [","            'id' => '',","            'name' => '',","            'countrycode' => '',","            'district' => '',","            'population' => ''","        ];","        $pagina = Reader::read('pagina');","        if($pagina === null || !is_numeric($pagina)) {","            $pagina = 1;","        }","        $orden = Reader::read('orden');","        if(!isset($ordenes[$orden])) {","            $orden = 'name';","        }","        $r = $this->getModel()->getDoctrineCiudades($pagina, $orden);","        $this->getModel()->add($r);","    }","","    function listavalores() {","        $array = [];","        $array[] = ['codigo' => 1, 'descripcion' => 'hola'];","        $array[] = ['codigo' => 2, 'descripcion' => 'adios'];","        $this->getModel()->set('resultado', $array);","    }","    ","    function register() {","        $usuario = new Usuario();","        ","        $usuario->setAlias(Reader::read('alias'));","        $usuario->setCorreo(Reader::read('correo'));","        $usuario->setClave(Reader::read('clave'));","        $usuario->setNombre(Reader::read('nombre'));","        $usuario->setApellidos(Reader::read('apellidos'));","        ","        $usuario->setActivo(1);","        $usuario->setAdministrador(0);","        ","        $repiteclave = Reader::read('repiteclave');","        if($usuario->getClave() !== $repiteclave ||","                mb_strlen($usuario->getClave()) < 4 ||","                !filter_var($usuario->getCorreo(), FILTER_VALIDATE_EMAIL)) {","            $resultado = 0;","        } else {","            $usuario->setClave(Util::encriptar($usuario->getClave()));","            $resultado = $this->getModel()->addUser($usuario);","        }","        $this->getModel()->set('alta', $resultado);","    }"]}],[{"start":{"row":48,"column":0},"end":{"row":52,"column":5},"action":"remove","lines":["    function dologout(){","        $this->getSession()->logout();","        $this->getModel()->set('logout', true);","        $this->getModel()->set('link', App::BASE . 'login');","    }"],"id":3}],[{"start":{"row":48,"column":0},"end":{"row":76,"column":4},"action":"remove","lines":["","","    function listaciudades() {","        $ordenes = [","            'id' => '',","            'name' => '',","            'countrycode' => '',","            'district' => '',","            'population' => ''","        ];","        $pagina = Reader::read('pagina');","        if($pagina === null || !is_numeric($pagina)) {","            $pagina = 1;","        }","        $orden = Reader::read('orden');","        if(!isset($ordenes[$orden])) {","            $orden = 'name';","        }","        $r = $this->getModel()->getDoctrineCiudades($pagina, $orden);","        $this->getModel()->add($r);","    }","","    function listavalores() {","        $array = [];","        $array[] = ['codigo' => 1, 'descripcion' => 'hola'];","        $array[] = ['codigo' => 2, 'descripcion' => 'adios'];","        $this->getModel()->set('resultado', $array);","    }","    "],"id":4}],[{"start":{"row":36,"column":0},"end":{"row":47,"column":0},"action":"remove","lines":["    function dologin(){","        $correo = Reader::read('correo');","        $clave = Reader::read('clave');","        $resultado = $this->getModel()->login($correo, $clave);","        if($resultado !== false) {","            $this->getSession()->login($resultado);","            $resultado=true;","            $this->getModel()->set('link', App::BASE);","        }","        $this->getModel()->set('login', $resultado);","    }",""],"id":5},{"start":{"row":35,"column":4},"end":{"row":36,"column":0},"action":"remove","lines":["",""]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"remove","lines":["    "]},{"start":{"row":34,"column":5},"end":{"row":35,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":36,"column":0},"end":{"row":58,"column":5},"action":"remove","lines":["    function register() {","        $usuario = new Usuario();","        ","        $usuario->setAlias(Reader::read('alias'));","        $usuario->setCorreo(Reader::read('correo'));","        $usuario->setClave(Reader::read('clave'));","        $usuario->setNombre(Reader::read('nombre'));","        $usuario->setApellidos(Reader::read('apellidos'));","        ","        $usuario->setActivo(1);","        $usuario->setAdministrador(0);","        ","        $repiteclave = Reader::read('repiteclave');","        if($usuario->getClave() !== $repiteclave ||","                mb_strlen($usuario->getClave()) < 4 ||","                !filter_var($usuario->getCorreo(), FILTER_VALIDATE_EMAIL)) {","            $resultado = 0;","        } else {","            $usuario->setClave(Util::encriptar($usuario->getClave()));","            $resultado = $this->getModel()->addUser($usuario);","        }","        $this->getModel()->set('alta', $resultado);","    }"],"id":6},{"start":{"row":35,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["",""]},{"start":{"row":34,"column":5},"end":{"row":35,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":37,"column":1},"action":"remove","lines":["<?php","","namespace framework\\controllers;","","use framework\\app\\App;","use framework\\objects\\dbobjects\\Usuario;","use framework\\models\\Model;","use framework\\objects\\Reader;","use framework\\objects\\Session;","use framework\\classes\\Util;","","class UserController extends Controller {","","    function __construct(Model $model) {","        parent::__construct($model);","        //...","    }","","    function comprobaralias() {","        $alias = Reader::read('alias');","        $available = 0;","        if($alias !== null && $alias !== '') {","            $available = $this->getModel()->aliasAvailable($alias);","        }","        $this->getModel()->set('aliasdisponible', $available);","    }","    ","    function comprobarcorreo() {","        $correo = Reader::read('correo');","        $available = 0;","        if(filter_var($correo, FILTER_VALIDATE_EMAIL)) {","            $available = $this->getModel()->correoAvailable($correo);","        }","        $this->getModel()->set('correodisponible', $available);","    }","    ","    ","}"],"id":7}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1550664243684,"hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709"}